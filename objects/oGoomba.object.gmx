<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGoomba</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>oEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

// New collision values since update to GM:Studio
// The new sprite origins should be X: center / Y: 0
leftCollisionBound=0-(sprite_width/2);
rightCollisionBound=sprite_width/2;
setCollisionBounds(leftCollisionBound+2,0,rightCollisionBound-2,sprite_height-1);
xVel=0.7;
image_speed=0.1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(timer &gt; 0){
  timer--;
}

yVel+=0.4;
if (isCollisionBottom(1)) {
  yVel=0;
  if(stunTimer == 0){
    if(xVel == 0) {
      alarm[0] = 0;
      xVel = 0.7;
    }
    if(abs(xVel) &gt; 0.7){
      xVel = abs(xVel)*0.7;
      image_xscale = abs(xVel)*1;
      yVel -= 3;
    }
  }
}
if (isCollisionLeft(1)) {
  if(stunType == 0){
    xVel*=-1;
    image_xscale = 1;
  } else {
    shake_spawn(2,5);
    timer = 0;
    xVel = 0;
    stunType = 0;
  }
}
if (isCollisionRight(1)) {
  if(stunType == 0){
    xVel*=-1;
    image_xscale = -1;
  } else {
    shake_spawn(2,5);
    timer = 0;
    xVel = 0;
    stunType = 0;
  }
}

if(stunTimer &gt; 0){
  switch(stunType){
    case 1:
      xVel = 0;
      x = random_range(x-knockX/2,x+knockX/2)
      y = random_range(y, y-knockY)
      break;
    case 2:
      xVel = knockX;
      yVel = knockY;
      if(timer % 2 == 1){
        var AfterImage = instance_create(x, y, oAfterImage);
        AfterImage.sprite_index = sprite_index;
        AfterImage.image_index = image_index;
        AfterImage.facing = sign(xVel);
        AfterImage.color = c_white;
      }
      break;
    case 3:
      xVel = 0;
      yVel = 0;
    case 4:
      break; 
    default:
      break;
  }
  stunTimer--;
  if(stunTimer == 0){
    if(stunType == 1){
      x=stunX;
      y=stunY;
    }
    stunType = 0;
  } 
}

moveTo(xVel,yVel);
if (isCollisionSolid()) {y-=2;}
if (y&gt;room_height+30) {instance_destroy();}
if(enHealth &lt;= 0){
  i=instance_create(x,y,oGoombaDie);
  if (image_xscale=1) {i.image_xscale=1;} else {i.image_xscale=-1;}
  instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oProjectile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oCharacter">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((other.yVel&gt;0) and (other.y&lt;y+5)) {
  other.yVel=-6-0.2*other.yVel;
  other.temporarilyInvincibleFromGoombas=1;
  i=instance_create(x,y,oGoombaDie);
  if (image_xscale=1) {i.image_xscale=1;} else {i.image_xscale=-1;}
  instance_destroy();
} else {
  if (other.temporarilyInvincibleFromGoombas=0) {
    instance_create(other.x,other.y,oCharacterDie);
    with (other) {instance_destroy();}
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
